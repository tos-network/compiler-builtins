[1m[32m   Compiling[0m proc-macro2 v1.0.103
[1m[32m   Compiling[0m quote v1.0.41
[1m[32m   Compiling[0m unicode-ident v1.0.22
[1m[32m   Compiling[0m libc v0.2.177
[1m[32m   Compiling[0m serde_core v1.0.228
[1m[32m   Compiling[0m serde v1.0.228
[1m[32m   Compiling[0m zerocopy v0.8.27
[1m[32m   Compiling[0m serde_json v1.0.145
[1m[32m   Compiling[0m find-msvc-tools v0.1.4
[1m[32m   Compiling[0m shlex v1.3.0
[1m[32m   Compiling[0m cc v1.2.43
[1m[32m   Compiling[0m heck v0.5.0
[1m[32m   Compiling[0m iai-callgrind-runner v0.14.2
[1m[32m   Compiling[0m itoa v1.0.15
[1m[32m   Compiling[0m memchr v2.7.6
[1m[32m   Compiling[0m autocfg v1.5.0
[1m[32m   Compiling[0m ryu v1.0.20
[1m[32m    Checking[0m cfg-if v1.0.4
[1m[32m   Compiling[0m syn v2.0.108
[1m[32m   Compiling[0m num-traits v0.2.19
[1m[32m   Compiling[0m proc-macro-error-attr2 v2.0.0
[1m[32m   Compiling[0m iai-callgrind v0.14.2
[1m[32m    Checking[0m utf8parse v0.2.2
[1m[32m    Checking[0m either v1.15.0
[1m[32m    Checking[0m anstyle-parse v0.2.7
[1m[32m    Checking[0m is_terminal_polyfill v1.70.2
[1m[32m    Checking[0m anstyle v1.0.13
[1m[32m   Compiling[0m paste v1.0.15
[1m[32m    Checking[0m anstyle-query v1.1.4
[1m[32m    Checking[0m colorchoice v1.0.4
[1m[32m    Checking[0m once_cell v1.21.3
[1m[32m    Checking[0m anstream v0.6.21
[1m[32m    Checking[0m clap_lex v0.7.6
[1m[32m    Checking[0m strsim v0.11.1
[1m[32m    Checking[0m clap_builder v4.5.51
[1m[32m    Checking[0m ciborium-io v0.2.2
[1m[32m    Checking[0m regex-syntax v0.8.8
[1m[32m    Checking[0m plotters-backend v0.3.7
[1m[32m    Checking[0m plotters-svg v0.3.7
[1m[32m    Checking[0m itertools v0.10.5
[1m[32m    Checking[0m same-file v1.0.6
[1m[32m    Checking[0m cast v0.3.0
[1m[32m    Checking[0m walkdir v2.5.0
[1m[32m    Checking[0m is-terminal v0.4.17
[1m[32m    Checking[0m anes v0.1.6
[1m[32m    Checking[0m oorandom v11.1.5
[1m[32m    Checking[0m plotters v0.3.7
[1m[32m   Compiling[0m compiler_builtins v0.1.160 (/Users/tomisetsu/tos-network/compiler-builtins/compiler-builtins)
[1m[32m    Checking[0m regex-automata v0.4.13
[0m[1m[33mwarning[0m[0m[1m: the borrowed expression implements the required traits[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcompiler-builtins/build.rs:379:22[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m379[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m            cfg.flag(&format!("-I{}", include_dir.to_str().unwrap()));[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                      [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: change this to: `format!("-I{}", include_dir.to_str().unwrap())`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mhelp[0m[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(clippy::needless_borrows_for_generic_args)]` on by default[0m

[0m[1m[33mwarning[0m[0m[1m: this `if` statement can be collapsed[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcompiler-builtins/build.rs:450:9[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m450[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m[1m[33m/[0m[0m [0m[0m        if target.env != "msvc" {[0m
[0m[1m[38;5;12m451[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m[1m[33m|[0m[0m [0m[0m            if target.arch == "x86" {[0m
[0m[1m[38;5;12m452[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m[1m[33m|[0m[0m [0m[0m                sources.extend(&[[0m
[0m[1m[38;5;12m453[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m[1m[33m|[0m[0m [0m[0m                    ("__ashldi3", "i386/ashldi3.S"),[0m
[0m[1m[38;5;12m...[0m[0m   [0m[0m[1m[33m|[0m
[0m[1m[38;5;12m463[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m[1m[33m|[0m[0m [0m[0m        }[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m [0m[0m[1m[33m|_________^[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mhelp[0m[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(clippy::collapsible_if)]` on by default[0m
[0m[1m[38;5;14mhelp[0m[0m: collapse nested if block[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m450[0m[0m [0m[0m[38;5;10m~ [0m[0m        if target.env != "msvc"[0m
[0m[1m[38;5;12m451[0m[0m [0m[0m[38;5;10m~ [0m[0m            [0m[0m[38;5;10m&&[0m[0m target.arch == "x86" {[0m
[0m[1m[38;5;12m452[0m[0m [0m[0m[1m[38;5;12m|[0m[0m                 sources.extend(&[[0m
[0m[1m[38;5;12m...[0m
[0m[1m[38;5;12m461[0m[0m [0m[0m[1m[38;5;12m|[0m[0m                 ]);[0m
[0m[1m[38;5;12m462[0m[0m [0m[0m[38;5;10m~ [0m[0m            }[0m
[0m    [0m[0m[1m[38;5;12m|[0m

[0m[1m[33mwarning[0m[0m[1m: the borrowed expression implements the required traits[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcompiler-builtins/build.rs:637:31[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m637[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        cfg.flag_if_supported(&format!("-ffile-prefix-map={}=.", root.display()));[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                               [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: change this to: `format!("-ffile-prefix-map={}=.", root.display())`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mhelp[0m[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args[0m

[0m[1m[33mwarning[0m[0m[1m: variables can be used directly in the `format!` string[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcompiler-builtins/build.rs:664:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m664[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m            println!("cargo:rustc-cfg={}=\"optimized-c\"", sym);[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mhelp[0m[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(clippy::uninlined_format_args)]` on by default[0m
[0m[1m[38;5;14mhelp[0m[0m: change this to[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m664[0m[0m [0m[0m[38;5;9m- [0m[0m            println!("cargo:rustc-cfg={}=\"optimized-c\""[0m[0m[38;5;9m, sym[0m[0m);[0m
[0m[1m[38;5;12m664[0m[0m [0m[0m[38;5;10m+ [0m[0m            println!("cargo:rustc-cfg={[0m[0m[38;5;10msym[0m[0m}=\"optimized-c\"");[0m
[0m    [0m[0m[1m[38;5;12m|[0m

[0m[1m[33mwarning[0m[0m[1m: the borrowed expression implements the required traits[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcompiler-builtins/build.rs:675:21[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m675[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        cfg.include(&builtins_dir);[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                     [0m[0m[1m[33m^^^^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: change this to: `builtins_dir`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mhelp[0m[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args[0m

[0m[1m[33mwarning[0m[0m[1m: variables can be used directly in the `format!` string[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcompiler-builtins/build.rs:696:38[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m696[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m                        out_dir.join(format!("lse_{}{}_{}.S", instruction_type, size, model_name));[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                                      [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mhelp[0m[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args[0m
[0m[1m[38;5;14mhelp[0m[0m: change this to[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m696[0m[0m [0m[0m[38;5;9m- [0m[0m                        out_dir.join(format!("lse_{}{}_{}.S"[0m[0m[38;5;9m, instruction_type, size, model_name[0m[0m));[0m
[0m[1m[38;5;12m696[0m[0m [0m[0m[38;5;10m+ [0m[0m                        out_dir.join(format!("lse_{[0m[0m[38;5;10minstruction_type[0m[0m}{[0m[0m[38;5;10msize[0m[0m}_{[0m[0m[38;5;10mmodel_name[0m[0m}.S"));[0m
[0m    [0m[0m[1m[38;5;12m|[0m

[0m[1m[33mwarning[0m[0m[1m: variables can be used directly in the `format!` string[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcompiler-builtins/build.rs:698:21[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m698[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m                    writeln!(file, "#define L_{}", instruction_type).unwrap();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                     [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mhelp[0m[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args[0m
[0m[1m[38;5;14mhelp[0m[0m: change this to[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m698[0m[0m [0m[0m[38;5;9m- [0m[0m                    writeln!(file, "#define L_{}"[0m[0m[38;5;9m, instruction_type[0m[0m).unwrap();[0m
[0m[1m[38;5;12m698[0m[0m [0m[0m[38;5;10m+ [0m[0m                    writeln!(file, "#define L_{[0m[0m[38;5;10minstruction_type[0m[0m}").unwrap();[0m
[0m    [0m[0m[1m[38;5;12m|[0m

[0m[1m[33mwarning[0m[0m[1m: variables can be used directly in the `format!` string[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcompiler-builtins/build.rs:699:21[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m699[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m                    writeln!(file, "#define SIZE {}", size).unwrap();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                     [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mhelp[0m[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args[0m
[0m[1m[38;5;14mhelp[0m[0m: change this to[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m699[0m[0m [0m[0m[38;5;9m- [0m[0m                    writeln!(file, "#define SIZE {}"[0m[0m[38;5;9m, size[0m[0m).unwrap();[0m
[0m[1m[38;5;12m699[0m[0m [0m[0m[38;5;10m+ [0m[0m                    writeln!(file, "#define SIZE {[0m[0m[38;5;10msize[0m[0m}").unwrap();[0m
[0m    [0m[0m[1m[38;5;12m|[0m

[0m[1m[33mwarning[0m[0m[1m: variables can be used directly in the `format!` string[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcompiler-builtins/build.rs:700:21[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m700[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m                    writeln!(file, "#define MODEL {}", model_number).unwrap();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                     [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mhelp[0m[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args[0m
[0m[1m[38;5;14mhelp[0m[0m: change this to[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m700[0m[0m [0m[0m[38;5;9m- [0m[0m                    writeln!(file, "#define MODEL {}"[0m[0m[38;5;9m, model_number[0m[0m).unwrap();[0m
[0m[1m[38;5;12m700[0m[0m [0m[0m[38;5;10m+ [0m[0m                    writeln!(file, "#define MODEL {[0m[0m[38;5;10mmodel_number[0m[0m}").unwrap();[0m
[0m    [0m[0m[1m[38;5;12m|[0m

[0m[1m[33mwarning[0m[0m[1m: variables can be used directly in the `format!` string[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcompiler-builtins/build.rs:710:31[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m710[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m                    let sym = format!("__aarch64_{}{}_{}", instruction_type, size, model_name);[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                               [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mhelp[0m[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args[0m
[0m[1m[38;5;14mhelp[0m[0m: change this to[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m710[0m[0m [0m[0m[38;5;9m- [0m[0m                    let sym = format!("__aarch64_{}{}_{}"[0m[0m[38;5;9m, instruction_type, size, model_name[0m[0m);[0m
[0m[1m[38;5;12m710[0m[0m [0m[0m[38;5;10m+ [0m[0m                    let sym = format!("__aarch64_{[0m[0m[38;5;10minstruction_type[0m[0m}{[0m[0m[38;5;10msize[0m[0m}_{[0m[0m[38;5;10mmodel_name[0m[0m}");[0m
[0m    [0m[0m[1m[38;5;12m|[0m

[0m[1m[33mwarning[0m[0m[1m: variables can be used directly in the `format!` string[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcompiler-builtins/build.rs:711:21[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m711[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m                    println!("cargo:rustc-cfg={}=\"optimized-c\"", sym);[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                     [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mhelp[0m[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args[0m
[0m[1m[38;5;14mhelp[0m[0m: change this to[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m711[0m[0m [0m[0m[38;5;9m- [0m[0m                    println!("cargo:rustc-cfg={}=\"optimized-c\""[0m[0m[38;5;9m, sym[0m[0m);[0m
[0m[1m[38;5;12m711[0m[0m [0m[0m[38;5;10m+ [0m[0m                    println!("cargo:rustc-cfg={[0m[0m[38;5;10msym[0m[0m}=\"optimized-c\"");[0m
[0m    [0m[0m[1m[38;5;12m|[0m

[1m[32m   Compiling[0m rustc_apfloat v0.2.3+llvm-462a31f5a5ab
[1m[33mwarning[0m[1m:[0m `compiler_builtins` (build script) generated 11 warnings
[1m[32m    Checking[0m criterion-plot v0.5.0
[1m[32m   Compiling[0m builtins-test v0.1.0 (/Users/tomisetsu/tos-network/compiler-builtins/builtins-test)
[1m[32m    Checking[0m rand_core v0.6.4
[1m[32m    Checking[0m smallvec v1.15.1
[1m[32m    Checking[0m rustc-std-workspace-core v1.0.1
[1m[32m    Checking[0m bitflags v2.10.0
[1m[32m    Checking[0m rand_xoshiro v0.6.0
[1m[32m   Compiling[0m getrandom v0.3.4
[1m[32m   Compiling[0m crossbeam-utils v0.8.21
[1m[32m   Compiling[0m gmp-mpfr-sys v1.6.8
[1m[32m    Checking[0m regex v1.12.2
[1m[32m   Compiling[0m az v1.2.1
[1m[33mwarning[0m[1m:[0m builtins-test@0.1.0: using apfloat fallback for f16 <-> f128 conversions
[1m[33mwarning[0m[1m:[0m builtins-test@0.1.0: using apfloat fallback for f16 <-> f64 conversions
[1m[33mwarning[0m[1m:[0m builtins-test@0.1.0: using apfloat fallback for f128
[1m[33mwarning[0m[1m:[0m builtins-test@0.1.0: using apfloat fallback for f128 <-> int conversions
[1m[32m   Compiling[0m libm v0.2.15
[1m[32m   Compiling[0m portable-atomic v1.11.1
[1m[32m   Compiling[0m rayon-core v1.13.0
[1m[32m   Compiling[0m rand_core v0.9.3
[1m[32m   Compiling[0m libm v0.2.15 (/Users/tomisetsu/tos-network/compiler-builtins/libm)
[1m[32m   Compiling[0m musl-math-sys v0.1.0 (/Users/tomisetsu/tos-network/compiler-builtins/crates/musl-math-sys)
[1m[32m   Compiling[0m proc-macro-error2 v2.0.1
[1m[32m   Compiling[0m rug v1.28.0
[1m[32m   Compiling[0m anyhow v1.0.100
[1m[32m   Compiling[0m ppv-lite86 v0.2.21
[1m[32m   Compiling[0m rand_chacha v0.9.0
[1m[32m    Checking[0m crossbeam-epoch v0.9.18
[1m[32m   Compiling[0m rand v0.9.2
[1m[32m    Checking[0m crossbeam-deque v0.8.6
[1m[31merror[0m[1m:[0m failed to run custom build command for `musl-math-sys v0.1.0 (/Users/tomisetsu/tos-network/compiler-builtins/crates/musl-math-sys)`

Caused by:
  process didn't exit successfully: `/Users/tomisetsu/tos-network/compiler-builtins/target/debug/build/musl-math-sys-2b064cc2e12d409e/build-script-build` (exit status: 101)
  --- stdout
  cargo::rerun-if-changed=/Users/tomisetsu/tos-network/compiler-builtins/crates/musl-math-sys/c_patches
  cargo::rerun-if-changed=/Users/tomisetsu/tos-network/compiler-builtins/crates/musl-math-sys/musl

  --- stderr

  thread 'main' panicked at crates/musl-math-sys/build.rs:121:5:
  musl source not found. Is the submodule up to date?
  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
[1m[33mwarning[0m[1m:[0m build failed, waiting for other jobs to finish...
